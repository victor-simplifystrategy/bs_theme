/*

Flow by WeTheme (http://www.wetheme.com)
Custom JS

*/

/* Mapping from sectionId to Slider instance */
var sliders = {};


$('.bold_option_checkbox label').on('click', function(){
	$(this).parent().toggleClass('awesome');

});


function block_select(event) {
    // Stop animation and show block when selected in the Slideshow section
    var slider = sliders[event.detail.sectionId];
    if (slider) {
        var index = parseInt(event.target.dataset.slideIndex);
        slider.show_slide(index);
    }
}

function block_deselect(event) {
    // Resume animation when block is deselected in the Slideshow section
    var slider = sliders[event.detail.sectionId];
    if (slider) {
        slider.start_animation();
    }
}

function get_section_name(event) {
    var section = null;
    if (event && event.detail) {
        var data = {};
        var dataset = event.target.dataset;
        for (var key in dataset) {
            if (dataset.hasOwnProperty(key) && key.indexOf('themeEditorSection-') === 0) {
                data = JSON.parse(dataset[key]);
            }
        }
        if (data.hasOwnProperty('type')) {
            section = data['type'];
        }
    }
    return section;
}

document.addEventListener('shopify:section:load', load_all);
document.addEventListener('shopify:section:unload', unload_all);
window.addEventListener("load", load_all);

// Run the fade in animation as soon as possible, don't wait for full content load
$(document).ready(function () {
    load_show_on_scroll();
});

function load_all(event) {
    document.addEventListener('shopify:block:select', block_select);
    document.addEventListener('shopify:block:deselect', block_deselect);

    var section = get_section_name(event);

    if (!section || section === 'products-block') {
        load_homepage_fading();
        load_featured_masonry();
    }
    load_blog_masonry();
    if (!section || section === 'slideshow') {
        // Do not reload slider when header or footer is changed
        load_slider(event && event.target);
    }
    if (!section || section === 'featured-blog') {
        load_carousel();
    }
    if (!section || section === 'text-adverts') {
        load_TextAdvertCarousel();
    }
    if (!section || section === 'product-template') {
        load_ownCarousel();
        load_swatches();
        load_reviews();
        load_imageZoomEvents();
    }
    if (!section || section === 'indiv-product') {
        load_indiv_product_slider();
        load_product_review_badges();
    }
    if (!section || section === 'product-template' || section === 'indiv-product') {
        load_quantity_selector();
        load_option_selectors(event.target);
        load_tabs();
    }
    if (!section || section === 'header') {
        load_accessible_menu();
        load_sticky_header();
        load_sticky();
        load_log_in();
        load_search_drawer();
    }
    if (!section || section === 'instagram') {
        load_instagram();
    }
    if (!section || section === 'collection-list') {
        load_home_collection();
    }
    if (!section || section === 'products-block') {
        load_product_block();
    }
    if (!section || section === 'home-hero' || section === 'video') {
        load_youtube_api();
        load_vimeo_api();
    }
    if (!section || section === 'home-hero') {
        load_hero();
    }
    if (!section || section === 'feature-row' || section === 'image-with-text-overlay') {
        load_parallax();
    }
    if (!section || section === 'collection-template') {
        load_collection_tag_filter();
        load_infinite_scroll();
        load_product_review_badges();
    }
    if (!section || section === 'featured-products') {
        load_product_review_badges();
    }
    if (!section || section === 'collection-template' || section === 'featured-products' || section === 'product-template') {
        load_shop_now();
    }
    if (!section) {
        load_drawer_sticky_menu();
    } else {
        load_show_on_scroll();
    }

    //Close drawers when clicked on drawer overlay
    $('#DrawerOverlay').off('click').on('click', function (evt) {
        if (timber.LeftDrawer.drawerIsOpen) {
            timber.LeftDrawer.close();
            evt.stopImmediatePropagation();
        }
        if (timber.RightDrawer.drawerIsOpen) {
            timber.RightDrawer.close();
            evt.stopImmediatePropagation();
        }
    });

    //Close drawers when clicked on drawer overlay
    $('.hideMenu').off('click').on('click', function (evt) {
        if (timber.LeftDrawer.drawerIsOpen) {
            timber.LeftDrawer.close();
            evt.stopImmediatePropagation();
        }
        if (timber.RightDrawer.drawerIsOpen) {
            timber.RightDrawer.close();
            evt.stopImmediatePropagation();
        }
    });  
  
    // Hide mobile search bar when disabled
    var has_search = $('.search-button').length > 0;
    $('.input-group.search-bar').toggle(has_search);
}

function unload_all() {
    document.removeEventListener('shopify:block:select', block_select);
    document.removeEventListener('shopify:block:deselect', block_deselect);
    sliders = {};
}


// Show on scroll animation
function load_show_on_scroll() {
    $(window).on('scroll', function () {
        show_on_scroll_checker();
    });
    show_on_scroll_checker();

    new WOW().init();
}

function show_on_scroll_checker() {
    var window_height = $(window).height();
    $('.show-on-scroll').each(function (index, section) {
        var rect = section.getBoundingClientRect();
        if (rect.bottom >= 0 && rect.top < window_height) {
            $(section).removeClass('show-on-scroll').addClass('shown-on-scroll animated fadeIn');
        }
    });
}


// Fading on homepage blocks
function load_homepage_fading() {
    apply_fade_effect('.homepage-featured-products-grid', '.homepage-featured-grid-item');
    apply_fade_effect('.collection-grid', '.homepage-collection-grid-item');
}

function apply_fade_effect(parent_selector, child_selector) {
    $(parent_selector).each(function (index, parent) {
        apply_fade_effect_to_element(parent, child_selector);
    });
}

function apply_fade_effect_to_element(element, child_selector) {
    var children = $(element).find(child_selector);

    children.on('mouseenter mouseleave', function(e) {
        children.not(this).stop(true).fadeTo('fast', e.type === 'mouseenter' ? 0.2 : 1);
    });
}

// Mobile Blog

function load_carousel() {
    $(".homepage-blog-mobile").addClass('owl-carousel owl-theme').owlCarousel({
       items: 1,
       autoHeight: true
    });

    $("#homepage-collection-mobile").addClass('owl-carousel owl-theme').owlCarousel({
       items: 1,
       autoHeight: true
    });
}

function load_sticky() {
    var $productSticky = $('.product-sticky.ui.sticky');
    if ($productSticky.length === 0) {
        return;
    }

    var $window = $(window);

    function checkWidth() {
        var windowsize = $window.width();
        if (windowsize > 768) {
            var context = $('.context');

            if (context.height() > $productSticky.height()) {
                var $site_header = $('.site-header');
              var offset_height = 0;
                if ($site_header.hasClass('sticky-header')) {
                    offset_height = $site_header.outerHeight() || 0;
                }
                $productSticky
                    .sticky({
                        context: '.context',
                        // We might need offset for custom header
                   });
            }
        } else {
            // console.log(windowsize);
        }
    }
    // Execute on load
    checkWidth();
    // Reexecute on page resize
    $(window).resize(checkWidth);
    // Reexecute when product review form opens (it changes page height)
    if ($('#shopify-product-reviews').length >= 0) {
        // The reviews will appear in the future, we need to wait for it
        var wait_for_review = setInterval(function () {
            var review_button = $('.spr-summary-actions-newreview');
            if (review_button.length === 0) {
                return;
            }
            clearInterval(wait_for_review);
            review_button.on('click', function () {
                // Reexecute the sticky
                checkWidth();
            });
        }, 1000);
    }
}

// Quantity Selector

function load_quantity_selector() {
    var $quantity = $('.nonajax-quantity-selector');
    if ($quantity.length === 0) {
        return;
    }

    var $input = $quantity.find('input');
    $quantity.find('.js-qty__adjust--minus').on('click', function () {
        $input.val(Math.max(1, parseInt($input.val()) - 1));
    });
    $quantity.find('.js-qty__adjust--plus').on('click', function () {
        $input.val(parseInt($input.val()) + 1);
    });
}

// Load ownCarousel on Product

function load_ownCarousel() {
  var product_images = $("#product-images-mobile");
  if (product_images.length === 0) {
      return;
  }
  var is_shop_now = product_images.closest('#ShopNowContainer').length > 0;

  var options;
  if (is_shop_now) {
      // Shop now
      options = {
          center: true,
          items: 2,
          autoHeight: true,
          dots: true
      };
  } else {
      // Mobile menu
      options = {
          items: 1,
          autoHeight: true
      };
  }

  product_images.owlCarousel(options);
  if (is_shop_now) {
    // Clicking on next and previous item should select it
    $(document).on('click', '#product-images-mobile .owl-item', function () {
      n = $(this).index();
      $("#product-images-mobile").trigger('to.owl.carousel', n);
    });
  }

    owlCarouselPaginationFix(product_images);
    owlCarouselSlowImageLoadFix(product_images);

}

//owl carousel pagination fix
function owlCarouselPaginationFix(product_images){

    product_images.on('refreshed.owl.carousel changed.owl.carousel', function(event) {

        $('#product-images-mobile .owl-dots').each(function(index, ele){

            if($(ele).children().length > 1){

                $(ele).removeClass('disabled');

            }

        });

    });
}

//owl carousel slow image load fix
function owlCarouselSlowImageLoadFix(product_images){

    product_images.on('refreshed.owl.carousel', function(event) {

        $(this).delay(500).queue(function() { //wait for owlCarousel to catch up.

            if($('.owl-stage-outer', product_images).height() == 1){

                $('.owl-stage-outer', product_images).css({'height' : 'auto'});

            }

        });

    });
}

// Load Product

function Product(element) {
    this.element = element;
    if (!this.element) {
        return;
    }
    this.$element = $(this.element);
    this.sectionId = this.element.dataset.sectionId;
    var product_json_el = document.querySelector('#ProductJson-' + this.sectionId);
    if (!product_json_el) {
        // No product on the page - maybe just product placeholder
        return;
    }
    this.product = JSON.parse(product_json_el.innerText);
    this.$selects = this.$element.find('.selector-wrapper select');
    this.$selects.on('change', _.debounce(this.on_select_change.bind(this), 100));
                     
                     
                    
                    
    this.$original_select = this.$element.find('.original-select');

    this.on_select_change();
}

Product.prototype.on_select_change = function () {
    var values = this.$selects.map(function (index, select) {
        return $(select).val();
    });
    var matching_variants = this.product.variants.filter(function (variant) {
        for (var i = 0; i < values.length; i++) {
            if (values[i] !== variant.options[i]) {
                return false
            }
        }
        return true;
    });
    if (matching_variants.length === 0) {
        this.update_variant(null);
    } else {
        this.update_variant(matching_variants[0]);
    }
};

Product.prototype.update_variant = function (variant) {
    timber.productPage({
        money_format: window.Currency ? window.Currency.moneyFormats[window.Currency.shopCurrency].money_format : window.default_currency_format,
        variant: variant,
        element: this.$element
    });
    if (variant) {
        this.$original_select.val(variant.id);
        
          
        var is_indiv_product = $(this.element).closest('.shopify-section').hasClass('homepage-section--indiv-product-wrapper');
        if (history.pushState && !is_indiv_product) {
          
      			  var colorTag = $('.swatch.color .swatch-element input:checked').next().attr('data-swatch');
              var scentTag = $('.swatch.scent .swatch-element input:checked').next().attr('data-swatch');
              var swatchID = colorTag;
              if(colorTag == undefined){
                  swatchID = scentTag
              }else{
                  swatchID = colorTag;            
              }
          
            // Change url to include variant if we're not on homepage
            var newurl = window.location.protocol + '//' + window.location.host + window.location.pathname + '?variant=' + variant.id + '#' + swatchID;
            
            window.history.replaceState({path: newurl}, '', newurl);
			$(window).trigger('hashchange');
              

        }

        var is_sale = variant.compare_at_price && variant.compare_at_price > variant.price;
        $('.product-page--sale-badge').toggleClass('hide', !is_sale);

        if ($('.product-details-wrapper').data('show-sku')) {
            $('.js__currentVariantSKU').text(variant.sku);
            $('.product__meta--sku').toggleClass('hide', !variant.sku);
        }
      

    }
};

function load_option_selectors(section) {
    var root = section || document;
    Array.prototype.forEach.call(root.querySelectorAll('.product-single'), function (element) {
        var product = new Product(element);
    });
}

// Product Tabs

function load_tabs() {
    $('ul.tabs').each(function(){
        var active, content, links = $(this).find('a');
        active = links.first().addClass('active');
        content = $(active.attr('href'));
        links.not(':first').each(function () {
            $($(this).attr('href')).hide();
        });
        $(this).find('a').click(function(e){
            active.removeClass('active');
            content.hide();
            active = $(this);
            content = $($(this).attr('href'));
            active.addClass('active');
            content.fadeIn();
            return false;
        });
    });
}

// Load swatches on product page

function load_swatches() {
    // Swatches now disabled
    
    $('.swatch :radio').change(function() {
        var $this = $(this);
        var optionIndex = $this.closest('.swatch').attr('data-option-index');
        var optionValue = $this.val();
        $this
            .closest('form')
            .find('#SingleOptionSelector-' + optionIndex)
            .val(optionValue)
            .trigger('change');
    });
    
}

// Reload reviews on change in theme admin

function load_spr() {
    // wait for SPR script to be loaded
    var wait_for_review = setInterval(function () {
        if (!window.SPR || !window.SPR.$) {
            return;
        }
        clearInterval(wait_for_review);
        window.SPR.initDomEls();
        window.SPR.loadProducts();
        window.SPR.loadBadges();
    }, 500);
}

function load_reviews() {
    if ($('#shopify-product-reviews').length >= 0) {
        load_spr();
    }
}

// Reload review badges on change in theme admin

function load_product_review_badges() {
    if ($('#shopify-product-reviews-badge').length >= 0) {
        load_spr();
    }
}

// Flexslider in Indiv Product section

function load_indiv_product_slider() {
    var slider = $('.homepage-sections--indiv-product-slider');
    slider.flexslider({
        directionNav: false,
        slideshow: false,
        animation: "slide"
    });

    slider.find('img').removeClass('hide');
}

// Blog Masonry

function load_blog_masonry() {
    var $grid2 = $('.blog-article-wrapper').masonry({
        // set itemSelector so .grid-sizer is not used in layout
        itemSelector: '.blog-grid-item',
        // use element for option
        columnWidth: '.blog-grid-item',
        gutter: '.blog-gutter-sizer',
        percentPosition: true
    });
}


// Featured Products Masonry

function load_featured_masonry() {
    var $grid = $('.homepage-featured-products-grid').masonry({
        // set itemSelector so .grid-sizer is not used in layout
        itemSelector: '.homepage-featured-grid-item',
        // use element for option
        columnWidth: '.homepage-featured-grid-item',
        percentPosition: true,
        gutter: '.gutter-sizer'
    });

    $grid.imagesLoaded().progress(function () {
        $grid.masonry('layout');
    });
}

// Accessible Menu JS
function load_accessible_menu() {
    $(".site-nav").addClass("js");
    $(".site-nav li").hover(
        function() {
            $("ul.site-nav__dropdown", $(this)).fadeIn();
        },
        function() {
            $("ul.site-nav__dropdown", $(this)).fadeOut();
        });
    $(".site-nav li a").focus(function() { // main nav anchor focus
       $(this).parent().children("ul").fadeIn();
    });
    $(".site-nav li li a").unbind(); // unbind hide drop downs from sub nav anchors
}

// Sticky page header
function load_sticky_header(skip_reload_on_image_load) {
    $('.sticky-header')
        .sticky({
            observeChanges: true,
            onStick: function () {
                var $this = $(this);
                $this.parent().innerHeight($this.outerHeight(true));
            },
            context: '#PageContainer',
            silent: true
        });
    if (!skip_reload_on_image_load) {
        // Update header size when logo is loaded
        $('.site-header__logo-image img').imagesLoaded(function () {
            load_sticky_header(true);
        });
    }
}

// Instagram section

var INSTAGRAM_SELECTOR = '.instagram-wrapper';
var INSTAGRAM_TEMPLATE = '<div class="grid__item %grid% homepage-instagram-indiv"><a href="\{\{link\}\}" target="_blank" class="square" style="background-image:url\(\{\{image\}\}\);"><div class="homepage-instagram-hover"><span class="fa-stack fa-2x"><i class="fa fa-circle fa-stack-2x fa-inverse"></i><i class="fa fa-instagram fa-stack-1x"></i></span></div></a></div>';

var INSTAGRAM_OPTIONS = {
    get: 'user',
    userId: 'self',
    resolution: 'standard_resolution'
};

var instagrams = {};

function instagram_init(instagram_element) {
    var section = instagram_element.dataset.id;

    // Read the instagram token
    var token_input = document.querySelector('#token-' + section);
    if (!token_input) {
        // We don't have a token, no data are available and placeholder is shown, just apply fade effect
        apply_fade_effect_to_element(instagram_element, '.grid__item');
        return;
    }
    var token = token_input.value;

    // Set up options for instafeed
    var target = document.querySelector('#instafeed-' + section),
        gridWidth = target.dataset.gridWidth,
        rows = parseInt(target.dataset.rows),
        grid = parseInt(target.dataset.grid);

    var options = $.extend({}, {
        target: target,
        accessToken: token,
        template: INSTAGRAM_TEMPLATE.replace('%grid%', gridWidth),
        limit: rows * grid,
        error: function (message) {
            console.error("Unable to download instagram data: " + message);
        },
        after: function () {
            // Apply the fade effect
     

            // Apply the fade effect
            // global method 'apply_fade_effect_to_element' defined in custom.js.liquid
            apply_fade_effect_to_element(target, '.grid__item');
        }
    }, INSTAGRAM_OPTIONS);

    // Remove all previous images
    while (target.firstChild) {
        target.removeChild(target.firstChild);
    }

    // Fetch and show instagram pictures
    var feed = new Instafeed(options);
    feed.run();
}

function load_instagram() {
    var instagram_elements = document.querySelectorAll(INSTAGRAM_SELECTOR);
    Array.prototype.forEach.call(instagram_elements, instagram_init);
}


// Home Collection section

function load_home_collection() {
    var homepageCollection = $('.homepage-collection-grid-item');
    homepageCollection.on('mouseenter mouseleave', function(e) {
       homepageCollection.not(this).stop(true).fadeTo('fast', e.type == 'mouseenter' ? 0.2 : 1);
    });
}


// Product Block section

function load_product_block() {
    var $grid = $('.homepage-featured-products-grid').masonry({
        // set itemSelector so .grid-sizer is not used in layout
        itemSelector: '.homepage-featured-grid-item',
        // use element for option
        columnWidth: '.homepage-featured-grid-item',
        percentPosition: true,
        gutter: '.gutter-sizer'
    });

    $grid.imagesLoaded().progress( function() {
        $grid.masonry('layout');
    });
}

function load_youtube(element) {
    var autoplay = element.dataset.homepageHeroVideoAutoplay === "true",
        mute = element.dataset.homepageHeroVideoMute === "true",
        loop = element.dataset.homepageHeroVideoLoop === "true";
    player = new YT.Player(element.id, {
        width: 746,
        videoId: element.dataset.homepageHeroVideoLink,
        playerVars: {
            showinfo: 0,
            modestbranding: 1,
            rel: 0
        },
        events: {

            onReady: function (event) {

                if (autoplay) {
                    event.target.playVideo();
                    hideVideoOverlays(element);
                }

                if (mute) {
                    event.target.mute();
                }

                registerVideoPlayButton(element, 'youtube', player);

            },
            onStateChange: function (event) {
                if (event.data === YT.PlayerState.ENDED && loop) {
                    event.target.playVideo();
                }
            }
        }
    });
}

function load_youtube_all() {
    $('.homepage-hero-youtube-video').each(function (index, el) {

        load_youtube(el);

    });
}

function load_youtube_api() {
    if (!document.querySelector('.homepage-hero-youtube-video')) {
        // No youtube elements, do not load youtube API
        return;
    }

    if (!document.querySelector('#youtube_api')) {
        // Youtube API is not yet loaded, create script that loads it
        create_script("youtube_api", "https://www.youtube.com/player_api");

        // Call 'youtube_load_all' as soon as the API is loaded
        window.onYouTubePlayerAPIReady = load_youtube_all;
    } else if (!window.YT) {
        // Script for loading youtube API is there, but youtube is not yet loaded,
        // load_youtube_all will be called when script finishes loading
    } else {
        // We already have youtube API loaded, call 'load_youtube_all'
        load_youtube_all();
    }
}

function load_vimeo(element, index) {

    var player = new Vimeo.Player(element.id);

    player.ready().then(function(){
        if (document.querySelector('#' + element.id).dataset.vimeoBackground === "true") {
            var iframe = $('.homepage-hero-vimeo-video').eq(index).find('iframe');
            if (iframe.length) {
                var src = iframe.attr('src');
                src += (src.indexOf('?') === -1) ? '?' : '&';
                iframe.attr('src', src + "background=1");
            }
        } else {
            registerVideoPlayButton(element, 'vimeo', player);
        }

        if (document.querySelector('#' + element.id).dataset.vimeoAutoplay === "true") {
            hideVideoOverlays(element);
        }

        if (document.querySelector('#' + element.id).dataset.homepageHeroVideoMute === "true") {
            player.setVolume(0);
        }

    }).catch(function (e) {

        document.getElementById(element.id).innerText = e;

    });

}

function load_vimeo_all() {
    $('.homepage-hero-vimeo-video').each(function (index, el) {
        load_vimeo(el, index);
    });
}

function load_vimeo_api() {
    if (!document.querySelector('.homepage-hero-vimeo-video')) {
        // No vimeo elements, do not load vimeo API
        return;
    }

    if (!document.querySelector('#vimeo_api')) {
        // Vimeo API is not yet loaded, create script that loads it
        var script = create_script("vimeo_api", "https://player.vimeo.com/api/player.js");

        if (script.readyState) {
            // IE
            script.onreadystatechange = function() {
                if (element.readyState == "loaded" || element.readyState == "complete") {
                    element.onreadystatechange = null;
                    load_vimeo_all();
                }
            };
        } else {
            // Other browsers
            script.onload = function() {
                load_vimeo_all();
            };
        }
    } else if (!window.Vimeo) {
        // Script for loading vimeo API is there, but vimeo is not yet loaded,
        // load_vimeo_all will be called when script finishes loading
    } else {
        // We already have vimeo API loaded, call 'load_vimeo_all'
        load_vimeo_all();
    }
}

// register events on the video play button, plays video and hides certain elements.
function registerVideoPlayButton(element, type, player){

    var videoParent = element.closest('.homepage-hero-content--video');
    var $playButton = $(".homepage-video-play-button", videoParent);

    // bind custom play button events
    $playButton.on("click", function(event) {

        if(type === 'youtube') {

            player.playVideo();

        } else if(type === 'vimeo') {

            player.play();

        }

        hideVideoOverlays(element);

    });

}

function hideVideoOverlays(videoElement){

    var videoParent = videoElement.closest('.homepage-hero-content--video');

    // hide some things when we press play.
    $(".js__hide-on-play", videoParent).fadeOut("slow");

    //we need to hide the ::before pseudo-element on the container when we press play.
    $('.homepage-hero-content-overlay-wrapper', videoParent).addClass('hidden');

}

function create_script(id, src) {
    var tag = document.createElement('script');
    tag.id = id;
    tag.src = src;
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    return tag;
}

function hover_effect($link) {
    var $overlay = $('#' + $link.data('overlayId'));
    $link.hover(
       function () {
           $overlay.addClass("active");
       },
       function () {
           $overlay.removeClass("active");
        });

    // Apply hover on page load
    if ($link.is(':hover')) {
       $overlay.addClass("active");
    }
}

function load_hero() {
    $('.homepage-hero-content-overlay-menu-item').imagesLoaded( { background: true }, function() {
        $(".homepage-hero-text-advert-link").each(function (index, link) {
            hover_effect($(link));
        });

        $('.homepage-hero-menu li').each(function (index, link) {
            hover_effect($(link));
        });
    });
}

function load_drawer_sticky_menu() {
    // Fix that scrolling inside drawer propagates to page content on iPad
    // it's an workaround for https://bugs.webkit.org/show_bug.cgi?id=153852
    // can be replaced by setting "overflow: hidden" to js-drawer-open
    // class after the bug is fixed
    var body_scroll = 0;
    $(document.body).on('beforeDrawerOpen.timber', function () {
        if ($(document.body).css('position') === 'fixed') {
            return;
        }
        body_scroll = document.body.scrollTop;
        $(document.body).css({
            position: 'fixed',
            height: '100%',
            width: '100%',
            overflow: 'hidden',
            marginTop: '-' + body_scroll + 'px'
        });
        load_sticky_header();
        load_sticky();
    });
    $(document.body).on('beforeDrawerClose.timber', function () {
        $(document.body).css({
            position: 'static',
            height: 'auto',
            width: 'auto',
            overflow: 'auto',
            marginTop: '0'
        }).scrollTop(body_scroll);
        load_sticky_header();
        load_sticky();
    });
}


// Slider section

var DEFAULT_OPTIONS = {
    directionNav: true,
    controlNav: false,
    startAt: 0
};

var SLIDER_SELECTOR = '.flexslider-homepage';
var SLIDER_REENABLE_INTERVAL = 6000;


/* Initialize all the sliders */
function load_slider(section) {
    sliders = {};
    section = section || document;
    var slider_elements = section.querySelectorAll(SLIDER_SELECTOR);
    Array.prototype.forEach.call(slider_elements, function (slider_element) {
        // Prevent flickering in the flexslider by setting fixed width of the slides
        $(slider_element).find('li').css('width', $(slider_element).width());

        sliders[slider_element.dataset.sliderId] = new Slider(slider_element);
    });
}

function Slider(element) {
    this.$element = $(element);
    this.restartTimer = null;
    this.running = true;

    this.get_speed = function () {
        return parseInt(this.$element.data('sliderSlideTime'));
    };

    this.get_animation = function () {
        return this.$element.data('sliderAnimation');
    };

    this.show_slide = function (index) {
        if (this.get_speed() > 0) {
            this.$element.flexslider("stop");
        }
        this.running = false;
        this.$element.flexslider(index);
    };

    this.start_animation = function () {
        this.running = true;
        // Don't start animation when autorotate is disabled
        if (this.get_speed() > 0) {
            this.$element.flexslider("play");
        }
    };

    this.on_slide_change = function(slider) {
        speed = this.get_speed();
        if (this.running && !slider.playing && speed > 0) {
            // restart autoscroll after given interval since last interaction
            clearTimeout(this.restartTimer);
            this.restartTimer = setTimeout(function () {
                slider.play();
            }, Math.max(0, SLIDER_REENABLE_INTERVAL - speed));
        }
    };

    this.configure = function (options) {
        var speed = this.get_speed();
        var $navigation = this.$element.parent().find(".custom-navigation");
        var opts = $.extend({
                controlsContainer: $navigation,
                slideshowSpeed: speed,
                animation: this.get_animation(),
                slideshow: speed > 0,
                useCSS: false, // Fix for background disappearing: http://stackoverflow.com/a/27298397
                pauseOnAction: true,
                after: this.on_slide_change.bind(this),
                customDirectionNav: $navigation.find('a')
            }, DEFAULT_OPTIONS, options);
        this.$element.find('ul').width('auto');
        this.$element.flexslider(opts);
    };
    this.configure({});

    // flexslider stops the animation when the page is not focused, this breaks when the section is
    // changed in theme admin because it triggers 'blur' event when another iframe is selected
    $(window).unbind('blur');
}

function load_collection_tag_filter() {
    /* Product Tag Filters - Good for any number of filters on any type of collection pages */
    var collFilters = jQuery('.coll-filter');
    collFilters.change(function () {
        var newTags = [];
        collFilters.each(function () {
            var val = jQuery(this).val();
            if (val) {
                newTags.push(val);
            }
        });
        if (newTags.length) {
            var query = newTags.join('+');
            var link = $('#link-to-tag-generic').val();
            window.location.href = $('#link-to-tag-generic a').attr('href').replace('tag', query);
        } else {
            window.location.href = $('#link-to-collection').val();
        }
    });
}

var rellax_by_id = {};
var was_mobile = false;
var resize_handler = null;
var rellax_elements = [];

function apply_parallax(id) {
    var old_relax = rellax_by_id[id];
    if (old_relax) {
        old_relax.destroy();
    }
    rellax_by_id[id] = new Rellax('#' + id, {
        center: true,
        speed: -4
    });
}

function parallaxes(apply) {
    Array.prototype.forEach.call(document.querySelectorAll('.rellax'), function (el) {
        el.style.transform = 'translate3d(0,0,0)';
        if (apply) {
            apply_parallax(el.id);
        }
    });
}

function load_parallax() {
    rellax_elements = document.querySelectorAll('.rellax');

    if (rellax_elements.length === 0) {
        // There is no rellax element
        return;
    }

    if ($(window).width() <= 768) {
        // No parallax on mobile
        was_mobile = true;
    } else {
        setTimeout(parallaxes.bind(null, true), 100);
    }

    if (resize_handler) {
        window.removeEventListener(resize_handler);
    }
    resize_handler = window.addEventListener('resize', function() {
        for (var key in rellax_by_id) {
            if (rellax_by_id.hasOwnProperty(key)) {
                var id = key;
                var rellax = rellax_by_id[key];
                rellax.destroy();
            }
        }
        rellax_by_id = {};
        setTimeout(function () {
            parallaxes($(window).width() > 768);
        }, 100);
        /*

            if (!was_mobile) {
                Array.prototype.forEach.call(rellax_elements, function (el) {
                    if (rellax_by_id.hasOwnProperty(el.id)) {
                        rellax_by_id[el.id].destroy();
                        delete rellax_by_id[el.id];
                        setTimeout(function () {
                            el.style.transform = 'translate3d(0,0,0)';
                        }, 100);
                    }
                });
            }
            was_mobile = true;
        } else {
            if (was_mobile) {
                Array.prototype.forEach.call(rellax_elements, function (el) {
                    apply_parallax(el.id)
                });
            }
            was_mobile = false;
        }
        */
    });
}

// Infinite scrolling

function Pagination() {
    // how many pixels from bottom should next page start loading
    this.PAGINATION_LOAD_OFFSET = 1200;
    // how often should the scroll position should be checked (in milliseconds)
    this.SCROLL_DELAY = 200;

    this.PAGINATION_SELECTOR = '.pagination';
    this.COLLECTION_MAIN_SELECTOR = '.collection-main-body-inner';
    this.COLLECTION_HEADER_SELECTOR = '.collection-main-central-header';
    this.COLLECTION_ITEM_SELECTOR = '.grid__item';
    this.COLLECTION_ITEM_EXCLUDE_SELECTOR = '.collection-central-description-block';

    this.$w = $(window);
    this.$doc = $(document);
    this.$collection = $(this.COLLECTION_MAIN_SELECTOR);
    this.$loading_indicator = $('.pagination-loading');
    this.loading = false;
    this.fully_loaded = false;
    this.scroll_timeout = null;

    this.scroll_handler = this.scroll_handler.bind(this);
    this.check_infinite_scroll = this.check_infinite_scroll.bind(this);
    this.install_scroll_handler();
}

Pagination.prototype.install_scroll_handler = function () {
    $(window).on("scroll", this.scroll_handler);
};

Pagination.prototype.uninstall_scroll_handler = function () {
    $(window).off("scroll", this.scroll_handler);
};

Pagination.prototype.scroll_handler = function () {
    if (this.scroll_timeout) {
        clearTimeout(this.scroll_timeout);
    }
    this.scroll_timeout = setTimeout(this.check_infinite_scroll, this.SCROLL_DELAY);
};

Pagination.prototype.check_infinite_scroll = function () {
    if (this.$doc.height() - this.PAGINATION_LOAD_OFFSET < (this.$doc.scrollTop() + this.$w.height())) {
        this.load_next_page();
    }
};

Pagination.prototype.set_loading = function (loading) {
    if (loading) {
        this.loading = true;
        this.$loading_indicator.show();
        $(this.PAGINATION_SELECTOR).hide();
    } else {
        this.loading = false;
        this.$loading_indicator.hide();
        $(this.PAGINATION_SELECTOR).show();
    }
};

Pagination.prototype.load_next_page = function () {
    if (this.loading) {
        return false;
    }
    var next_url = $(this.PAGINATION_SELECTOR).find('.pagination-next a').attr('href');
    if (!next_url || next_url === '#') {
        this.uninstall_scroll_handler();
        return;
    }
    this.set_loading(true);
    $.ajax({
        type: 'GET',
        url: next_url,
        dataType: "html"
    })
        .done(this.page_loaded.bind(this))
        .always(this.set_loading.bind(this, false));
};

Pagination.prototype.page_loaded = function (data) {
    var data_dom = $(data);
    this.$collection.append(
        data_dom.find(this.COLLECTION_HEADER_SELECTOR + ' > ' + this.COLLECTION_ITEM_SELECTOR).not(this.COLLECTION_ITEM_EXCLUDE_SELECTOR),
        data_dom.find(this.COLLECTION_MAIN_SELECTOR + ' > ' + this.COLLECTION_ITEM_SELECTOR)
    );
    $(this.PAGINATION_SELECTOR).replaceWith(data_dom.find(this.PAGINATION_SELECTOR));

    // Add handlers for 'shop now' buttons
    load_shop_now();
    // Load reviews
    load_product_review_badges();
};

var pagination = null;

function load_infinite_scroll() {
    if (pagination) {
        pagination.uninstall_scroll_handler();
        pagination = null;
    }

    var $pagination = $('.pagination-infinite');
    if ($pagination.length === 0) {
        return;
    }

    pagination = new Pagination();
}

// Base for all the secondary drawers, primary drawer is the Cart

function Drawer(container_selector, title_selector) {
    this.animation_duration = 800;
    this.$body = $('body');
    this.$drawer = $('#CartDrawer');
    this.$primary_container = $('#CartContainer');
    this.$primary_title = $('#CartTitle');
    this.$secondary_container = $(container_selector);
    this.$secondary_title = $(title_selector);

    this.$primary_group = this.$primary_container.add(this.$primary_title);
    this.$secondary_group = this.$secondary_container.add(this.$secondary_title);
}

Drawer.prototype.show_primary = function () {
    this.$secondary_group.addClass('hide');
    this.$primary_group.removeClass('hide');
};

Drawer.prototype.show_secondary = function () {
    this.$primary_group.addClass('hide');
    this.$secondary_group.removeClass('hide');
};

Drawer.prototype.open = function () {
    this.show_secondary();
    this.$body.one('afterDrawerClose.timber', this.close.bind(this));
    timber.RightDrawer.open();
};

Drawer.prototype.close = function () {
    // Show cart after the animation ends
    setTimeout(function () {
        this.show_primary();
    }.bind(this), this.animation_duration);
};

// Load Quick Shop in the Cart drawer

function ShopNow(url) {
    this.$body = $('body');
    this.drawer = new Drawer('#ShopNowContainer', '#ShopNowTitle');

    this.$body.on('afterAddItem.ajaxCart', this.animate_to_cart.bind(this));

    $.ajax({
        type: 'GET',
        url: url,
        dataType: 'html'
    })
        .done(this.page_loaded.bind(this))
        .error(function (error) {
            // FIXME: handle error correctly
            alert(error);
        });
}

ShopNow.prototype.page_loaded = function (data) {
    var data_dom = $(data);
    var product_single = data_dom.find('.product-single');

    // We don't want to see reviews
    product_single.find('#shopify-product-reviews').remove();
    // We want to see mobile slider instead of desktop version
    product_single.find('.product-single__photos').hide();
    product_single.find('#product-images-mobile').removeClass('large--hide');

    // Replace product html content
    var container = this.drawer.$secondary_container;
    container.find('.product-single').remove();
    container.append(product_single);

    // Replace product JSON
    container.find('#ProductJson-product-template').remove();
    container.append(data_dom.find('#ProductJson-product-template'));

    load_quantity_selector();
    load_ownCarousel();
    load_option_selectors(container[0]);
    load_tabs();
    load_swatches();

    if (typeof ajaxCart !== "undefined") {
        ajaxCart.init({
            formSelector: '#AddToCartForm',
            cartContainer: '#CartContainer',
            addToCartSelector: '#AddToCart',
            cartCountSelector: '#CartCount',
            moneyFormat: window.Currency ? window.Currency.moneyFormats[window.Currency.shopCurrency].money_format : window.default_currency_format
        });
    }

    this.drawer.open();
};


// Fade in animation between Quick Shop and Cart
ShopNow.prototype.animate_to_cart = function () {
    this.$body.one('afterCartLoad.ajaxCart', function () {
        timber.RightDrawer.close();
        setTimeout(function () {
            this.drawer.show_primary();
            timber.RightDrawer.open();
            this.drawer.$drawer.scrollTop(0);
        }.bind(this), this.drawer.animation_duration);
    }.bind(this));
};

function shop_now_handler(e) {
    var url = $(this).attr('href');
    new ShopNow(url);
    return false;
}

function load_shop_now() {
    $('.shop-now-button').off('click', shop_now_handler).on('click', shop_now_handler);
}

// Load Log In in the Cart drawer

function LogInDrawer(url) {
    this.drawer = new Drawer('#LogInContainer', '#LogInTitle');

    this.$body = $('body');

    $.ajax({
        type: 'GET',
        url: url,
        dataType: 'html'
    })
        .done(this.page_loaded.bind(this))
        .error(function (error) {
            // FIXME: handle error correctly
            alert(error);
        });
}

LogInDrawer.prototype.page_loaded = function (data) {
    var data_dom = $(data);
    var main_content = data_dom.find('.main-content');
    main_content.find('.login-form-cancel').remove();
    main_content.find('.sitewide--title-wrapper').remove();
    this.drawer.$secondary_container.empty().append(main_content);

    // Bind recover password button
    timber.cacheSelectors();
    timber.loginForms();

    this.drawer.open();
};

function log_in_handler(e) {
    var url = $(this).attr('href');
    new LogInDrawer(url);
    return false;
}

function load_log_in() {
    $('.log-in-button').off('click', log_in_handler).on('click', log_in_handler);
}

function SearchDrawer() {
    this.drawer = new Drawer('#SearchContainer', '#SearchTitle');
    this.drawer.open();
    this.section_by_type = {
        'article': 'Articles',
        'page': 'Pages',
        'product': 'Products'
    };
    this.current_xhr = null;
    this.onchange_timer = null;

    this.$results = $('#search-results');
    var source = $("#LiveSearchResultTemplate").html();
    this.template = Handlebars.compile(source);

    var self = this;
    $('#search-input').bind('keyup change', function () {
        self.onchange($(this).val());
    });
}

SearchDrawer.prototype.onchange = function (query) {
    if (this.onchange_timer) {
        clearTimeout(this.onchange_timer);
    }
    this.onchange_timer = setTimeout(this.onchange_throttled.bind(this, query), 200);
    if (this.current_xhr) {
        this.current_xhr.abort();
    }
};

SearchDrawer.prototype.get_search_url = function(query, json) {
    var types = 'product,article,page';
    var view = '';
    if (json) {
        view = '&view=json';
    }
    return '/search?type=' + types + view + '&q=' + encodeURIComponent(query);
};

SearchDrawer.prototype.onchange_throttled = function (query) {
    var url = this.get_search_url(query, true);
    this.$results.empty();
    this.$results.append('<i class="fa fa-circle-o-notch fa-spin fa-fw"></i><span class="sr-only">Loading...</span>');

    this.current_xhr = $.getJSON(url)
        .done(this.show_results.bind(this))
        .fail(this.show_error.bind(this))
        .always(function () { this.current_xhr = null; }.bind(this));
};

SearchDrawer.prototype.show_results = function (data) {
  console.log(data);
    var $show_more = $('#search-show-more');
    $show_more.addClass('hide');
    this.$results.empty();
    var results_by_type = {};
    data.results.forEach(function (result) {
        if (results_by_type.hasOwnProperty(result.type)) {
            results_by_type[result.type].push(result);
        } else {
            results_by_type[result.type] = [result];
        }
    });

    if (data.terms) {
        if (data.results.length > 0) {
            this.$results.append('<p>' + SearchTranslations.results_for_html.replace('\{\{ terms \}\}', data.terms) + '</p>');
            for (var type in results_by_type) {
                if (results_by_type.hasOwnProperty(type)) {
                    this.$results.append('<h2>' + this.section_by_type[type] + '</h2>');
                    results_by_type[type].forEach(this.show_result.bind(this));
                }
            }
            if (data.has_more) {
                $show_more.removeClass('hide').attr('href', this.get_search_url(data.terms, false));
            }
            if (window.Currency) {
                window.Currency.convertAll(window.Currency.shopCurrency, window.Currency.currentCurrency);
            }
        } else {
            this.$results.append('<p>' + SearchTranslations.no_results_html.replace('\{\{ terms \}\}', data.terms) + '</p>');
        }
    }
};

SearchDrawer.prototype.show_result = function (result) {
    this.$results.append(this.template(result));
};

SearchDrawer.prototype.show_error = function (error) {
    if (error.statusText === 'abort') {
        return;
    }
    console.error("statusText", error.statusText);
    console.error("error", JSON.stringify(error));
    // We'll redirect the user to /search page when search fails (for whatever reason)
    var query = $('#search-input').val();
    window.location = this.get_search_url(query, false);
};

function search_handler(e) {
    new SearchDrawer();
    return false;
}

function load_search_drawer() {
    $('.search-button').off('click', search_handler).on('click', search_handler);
}

$(document).ready(function(){

    load_imageZoomEvents();

});


function load_imageZoomEvents(){

    //page load
    loadImageZoom();

    //responsive check
    $(window).on('resize', function(){

        loadImageZoom();

    });

}

function loadImageZoom(){

    //only tablet and up
    if($(window).width() > 768){

        $('.product-single__photo-wrapper img.product-single__photo').hoverIntent(hoverZoomIn, hoverZoomOut);

    } else {

        // kill all zoom events if we re-size below tablet
        $('.product-single__photo').each(function(index, image){

            $(image).trigger('zoom.destroy'); // remove zoom

        });

    }

}

function hoverZoomIn(event){

        var image = $(this);

        var imageZoomEnabled = image.data().imageZoomEnable;

        var alreadyLoaded = image.hasClass('js__image_already_loaded');

        var smallImage = image.hasClass('js__smallImage');

        // only if image-zoom enabled
        if(imageZoomEnabled == true && !alreadyLoaded && !smallImage) {

            image.css({opacity : 0.5});

            var imageZoom = image.data().imageZoom;

            var imageParent = image.closest('.product-single__photo-wrapper');

            var imageZoomLoader = imageParent.find('#featured-image-loader').fadeIn('fast');

            $(this).delay(500).queue(function() {

                imageParent
                    .css('display', 'inline-block')
                    .zoom({
                        url: imageZoom,
                        callback: function () { //fires when the zoomed image has finished loading

                            image.addClass('js__image_already_loaded');
                            imageZoomLoader.fadeOut('slow');
                            // slight quirk means we need to re-fire the mouseover event to actually see the image.
                            image.trigger('mouseover');

                        }
                    });

            });

        }
}

function hoverZoomOut(){

    var image = $(this);

    image.css({opacity : 1});

}

if($('#shopify-product-reviews').length > 0){

    var $productReviewsPlaceholder = $('.desktop_review_placeholder');
    var $productReviews = $('#shopify-product-reviews', $productReviewsPlaceholder);
    var $productReviewsClone = $productReviews.clone();

    moveProductReviews($productReviewsClone);

    $(window).on('resize', function(){

        moveProductReviews($productReviewsClone);

    });

}

function moveProductReviews($productReviews){

    if($(window).width() < 768) {

        $('.mobile_review_placeholder').append($productReviews);

    } else {

        $('.mobile_review_placeholder #shopify-product-reviews').remove();

    }

}

load_TextAdvertCarousel();

function load_TextAdvertCarousel(){

    if($('.text-advert-section').length > 0){

        $(".text-advert-section .slides").addClass('owl-carousel owl-theme').owlCarousel({
            items: 1,
            autoHeight: true
        });
    }
}

if (typeof(theme) !== 'undefined')
theme.Slideshow = (function() {
  this.$slideshow = null;
  var classes = {
    wrapper: 'slideshow-wrapper',
    slideshow: 'slideshow',
    currentSlide: 'slick-current',
    video: 'slideshow__video',
    videoBackground: 'slideshow__video--background',
    closeVideoBtn: 'slideshow__video-control--close',
    pauseButton: 'slideshow__pause',
    isPaused: 'is-paused'
  };

  function slideshow(el) {
    this.$slideshow = $(el);
    this.$wrapper = this.$slideshow.closest('.' + classes.wrapper);
    this.$pause = this.$wrapper.find('.' + classes.pauseButton);

    this.settings = {
      accessibility: true,
      arrows: false,
      dots: true,
      fade: true,
      draggable: true,
      touchThreshold: 20,
      autoplay: this.$slideshow.data('autoplay'),
      autoplaySpeed: this.$slideshow.data('speed')
    };

    this.$slideshow.on('beforeChange', beforeChange.bind(this));
    this.$slideshow.on('init', slideshowA11y.bind(this));
    this.$slideshow.slick(this.settings);

    this.$pause.on('click', this.togglePause.bind(this));
  }

  function slideshowA11y(event, obj) {
    var $slider = obj.$slider;
    var $list = obj.$list;
    var $wrapper = this.$wrapper;
    var autoplay = this.settings.autoplay;

    // Remove default Slick aria-live attr until slider is focused
    $list.removeAttr('aria-live');

    // When an element in the slider is focused
    // pause slideshow and set aria-live.
    $wrapper.on('focusin', function(evt) {
      if (!$wrapper.has(evt.target).length) {
        return;
      }

      $list.attr('aria-live', 'polite');

      if (autoplay) {
        $slider.slick('slickPause');
      }
    });

    // Resume autoplay
    $wrapper.on('focusout', function(evt) {
      if (!$wrapper.has(evt.target).length) {
        return;
      }

      $list.removeAttr('aria-live');

      if (autoplay) {
        // Manual check if the focused element was the video close button
        // to ensure autoplay does not resume when focus goes inside YouTube iframe
        if ($(evt.target).hasClass(classes.closeVideoBtn)) {
          return;
        }

        $slider.slick('slickPlay');
      }
    });

    // Add arrow key support when focused
    if (obj.$dots) {
      obj.$dots.on('keydown', function(evt) {
        if (evt.which === 37) {
          $slider.slick('slickPrev');
        }

        if (evt.which === 39) {
          $slider.slick('slickNext');
        }

        // Update focus on newly selected tab
        if ((evt.which === 37) || (evt.which === 39)) {
          obj.$dots.find('.slick-active button').focus();
        }
      });
    }
  }

  function beforeChange(event, slick, currentSlide, nextSlide) {
    var $slider = slick.$slider;
    var $currentSlide = $slider.find('.' + classes.currentSlide);
    var $nextSlide = $slider.find('.slideshow__slide[data-slick-index="' + nextSlide + '"]');

    if (isVideoInSlide($currentSlide)) {
      var $currentVideo = $currentSlide.find('.' + classes.video);
      var currentVideoId = $currentVideo.attr('id');
      theme.SlideshowVideo.pauseVideo(currentVideoId);
      $currentVideo.attr('tabindex', '-1');
    }

    if (isVideoInSlide($nextSlide)) {
      var $video = $nextSlide.find('.' + classes.video);
      var videoId = $video.attr('id');
      var isBackground = $video.hasClass(classes.videoBackground);
      if (isBackground) {
        theme.SlideshowVideo.playVideo(videoId);
      } else {
        $video.attr('tabindex', '0');
      }
    }
  }

  function isVideoInSlide($slide) {
    return $slide.find('.' + classes.video).length;
  }

  slideshow.prototype.togglePause = function() {
    var slideshowSelector = getSlideshowId(this.$pause);
    if (this.$pause.hasClass(classes.isPaused)) {
      this.$pause.removeClass(classes.isPaused);
      $(slideshowSelector).slick('slickPlay');
    } else {
      this.$pause.addClass(classes.isPaused);
      $(slideshowSelector).slick('slickPause');
    }
  };

  function getSlideshowId($el) {
    return '#Slideshow-' + $el.data('id');
  }

  return slideshow;
})();

// Youtube API callback
// eslint-disable-next-line no-unused-vars
function onYouTubeIframeAPIReady() {
  theme.SlideshowVideo.loadVideos();
}

if (typeof(theme) !== 'undefined')
theme.SlideshowVideo = (function() {
  var autoplayCheckComplete = false;
  var autoplayAvailable = false;
  var playOnClickChecked = false;
  var playOnClick = false;
  var youtubeLoaded = false;
  var videos = {};
  var videoPlayers = [];
  var videoOptions = {
    ratio: 16 / 9,
    playerVars: {
      // eslint-disable-next-line camelcase
      iv_load_policy: 3,
      modestbranding: 1,
      autoplay: 0,
      controls: 0,
      showinfo: 0,
      wmode: 'opaque',
      branding: 0,
      autohide: 0,
      rel: 0
    },
    events: {
      onReady: onPlayerReady,
      onStateChange: onPlayerChange
    }
  };
  var classes = {
    playing: 'video-is-playing',
    paused: 'video-is-paused',
    loading: 'video-is-loading',
    loaded: 'video-is-loaded',
    slideshowWrapper: 'slideshow-wrapper',
    slide: 'slideshow__slide',
    slideBackgroundVideo: 'slideshow__slide--background-video',
    slideDots: 'slick-dots',
    videoChrome: 'slideshow__video--chrome',
    videoBackground: 'slideshow__video--background',
    playVideoBtn: 'slideshow__video-control--play',
    closeVideoBtn: 'slideshow__video-control--close',
    currentSlide: 'slick-current',
    slickClone: 'slick-cloned',
    supportsAutoplay: 'autoplay',
    supportsNoAutoplay: 'no-autoplay'
  };

  /**
    * Public functions
   */
  function init($video) {
    if (!$video.length) {
      return;
    }

    videos[$video.attr('id')] = {
      id: $video.attr('id'),
      videoId: $video.data('id'),
      type: $video.data('type'),
      status: $video.data('type') === 'chrome' ? 'closed' : 'background', // closed, open, background
      videoSelector: $video.attr('id'),
      $parentSlide: $video.closest('.' + classes.slide),
      $parentSlideshowWrapper: $video.closest('.' + classes.slideshowWrapper),
      controls: $video.data('type') === 'background' ? 0 : 1,
      slideshow: $video.data('slideshow')
    };

    if (!youtubeLoaded) {
      // This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');
      tag.src = 'https://www.youtube.com/iframe_api';
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    }
  }

  function customPlayVideo(playerId) {
    // Do not autoplay just because the slideshow asked you to.
    // If the slideshow asks to play a video, make sure
    // we have done the playOnClick check first
    if (!playOnClickChecked && !playOnClick) {
      return;
    }

    if (playerId && typeof videoPlayers[playerId].playVideo === 'function') {
      privatePlayVideo(playerId);
    }
  }

  function pauseVideo(playerId) {
    if (videoPlayers[playerId] && typeof videoPlayers[playerId].pauseVideo === 'function') {
      videoPlayers[playerId].pauseVideo();
    }
  }

  function loadVideos() {
    for (var key in videos) {
      if (videos.hasOwnProperty(key)) {
        var args = $.extend({}, videoOptions, videos[key]);
        args.playerVars.controls = args.controls;
        videoPlayers[key] = new YT.Player(key, args);
      }
    }

    initEvents();
    youtubeLoaded = true;
  }

  function loadVideo(key) {
    if (!youtubeLoaded) {
      return;
    }
    var args = $.extend({}, videoOptions, videos[key]);
    args.playerVars.controls = args.controls;
    videoPlayers[key] = new YT.Player(key, args);

    initEvents();
  }

  /**
    * Private functions
   */

  function privatePlayVideo(id, clicked) {
    var videoData = videos[id];
    var player = videoPlayers[id];
    var $slide = videos[id].$parentSlide;

    if (playOnClick) {
      // playOnClick means we are probably on mobile (no autoplay).
      // setAsPlaying will show the iframe, requiring another click
      // to play the video.
      setAsPlaying(videoData);
    } else if (clicked || (autoplayCheckComplete && autoplayAvailable)) {
      // Play if autoplay is available or clicked to play
      $slide.removeClass(classes.loading);
      setAsPlaying(videoData);
      player.playVideo();
      return;
    }

    // Check for autoplay if not already done
    if (!autoplayCheckComplete) {
      autoplayCheckFunction(player, $slide);
    }
  }

  function setAutoplaySupport(supported) {
    var supportClass = supported ? classes.supportsAutoplay : classes.supportsNoAutoplay;
    $(document.documentElement).addClass(supportClass);

    if (!supported) {
      playOnClick = true;
    }

    autoplayCheckComplete = true;
  }

  function autoplayCheckFunction(player, $slide) {
    // attempt to play video
    player.playVideo();

    autoplayTest(player)
      .then(function() {
        setAutoplaySupport(true);
      })
      .fail(function() {
        // No autoplay available (or took too long to start playing).
        // Show fallback image. Stop video for safety.
        setAutoplaySupport(false);
        player.stopVideo();
      })
      .always(function() {
        autoplayCheckComplete = true;
        $slide.removeClass(classes.loading);
      });
  }

  function autoplayTest(player) {
    var deferred = $.Deferred();
    var wait;
    var timeout;

    wait = setInterval(function() {
      if (player.getCurrentTime() <= 0) {
        return;
      }

      autoplayAvailable = true;
      clearInterval(wait);
      clearTimeout(timeout);
      deferred.resolve();
    }, 500);

    timeout = setTimeout(function() {
      clearInterval(wait);
      deferred.reject();
    }, 4000); // subjective. test up to 8 times over 4 seconds

    return deferred;
  }

  function playOnClickCheck() {
    // Bail early for a few instances:
    // - small screen
    // - device sniff mobile browser

    if (playOnClickChecked) {
      return;
    }

    if ($(window).width() < 750) {
      playOnClick = true;
    } else if (window.mobileCheck()) {
      playOnClick = true;
    }

    if (playOnClick) {
      // No need to also do the autoplay check
      setAutoplaySupport(false);
    }

    playOnClickChecked = true;
  }

  // The API will call this function when each video player is ready
  function onPlayerReady(evt) {
    evt.target.setPlaybackQuality('hd1080');
    var videoData = getVideoOptions(evt);

    playOnClickCheck();

    // Prevent tabbing through YouTube player controls until visible
    $('#' + videoData.id).attr('tabindex', '-1');

    sizeBackgroundVideos();

    // Customize based on options from the video ID
    switch (videoData.type) {
      case 'background-chrome':
      case 'background':
        evt.target.mute();
        // Only play the video if it is in the active slide
        if (videoData.$parentSlide.hasClass(classes.currentSlide)) {
          privatePlayVideo(videoData.id);
        }
        break;
    }

    videoData.$parentSlide.addClass(classes.loaded);
  }

  function onPlayerChange(evt) {
    var videoData = getVideoOptions(evt);

    switch (evt.data) {
      case 0: // ended
        setAsFinished(videoData);
        break;
      case 1: // playing
        setAsPlaying(videoData);
        break;
      case 2: // paused
        setAsPaused(videoData);
        break;
    }
  }

  function setAsFinished(videoData) {
    switch (videoData.type) {
      case 'background':
        videoPlayers[videoData.id].seekTo(0);
        break;
      case 'background-chrome':
        videoPlayers[videoData.id].seekTo(0);
        closeVideo(videoData.id);
        break;
      case 'chrome':
        closeVideo(videoData.id);
        break;
    }
  }

  function setAsPlaying(videoData) {
    var $slideshow = videoData.$parentSlideshowWrapper;
    var $slide = videoData.$parentSlide;

    $slide.removeClass(classes.loading);

    // Do not change element visibility if it is a background video
    if (videoData.status === 'background') {
      return;
    }

    $('#' + videoData.id).attr('tabindex', '0');

    switch (videoData.type) {
      case 'chrome':
      case 'background-chrome':
        $slideshow
          .removeClass(classes.paused)
          .addClass(classes.playing);
        $slide
          .removeClass(classes.paused)
          .addClass(classes.playing);
        break;
    }

    // Update focus to the close button so we stay within the slide
    $slide.find('.' + classes.closeVideoBtn).focus();
  }

  function setAsPaused(videoData) {
    var $slideshow = videoData.$parentSlideshowWrapper;
    var $slide = videoData.$parentSlide;

    if (videoData.type === 'background-chrome') {
      closeVideo(videoData.id);
      return;
    }

    // YT's events fire after our click event. This status flag ensures
    // we don't interact with a closed or background video.
    if (videoData.status !== 'closed' && videoData.type !== 'background') {
      $slideshow.addClass(classes.paused);
      $slide.addClass(classes.paused);
    }

    if (videoData.type === 'chrome' && videoData.status === 'closed') {
      $slideshow.removeClass(classes.paused);
      $slide.removeClass(classes.paused);
    }

    $slideshow.removeClass(classes.playing);
    $slide.removeClass(classes.playing);
  }

  function closeVideo(playerId) {
    var videoData = videos[playerId];
    var $slideshow = videoData.$parentSlideshowWrapper;
    var $slide = videoData.$parentSlide;
    var classesToRemove = [classes.pause, classes.playing].join(' ');

    $('#' + videoData.id).attr('tabindex', '-1');

    videoData.status = 'closed';

    switch (videoData.type) {
      case 'background-chrome':
        videoPlayers[playerId].mute();
        setBackgroundVideo(playerId);
        break;
      case 'chrome':
        videoPlayers[playerId].stopVideo();
        setAsPaused(videoData); // in case the video is already paused
        break;
    }

    $slideshow.removeClass(classesToRemove);
    $slide.removeClass(classesToRemove);
  }

  function getVideoOptions(evt) {
    return videos[evt.target.h.id];
  }

  function startVideoOnClick(playerId) {
    var videoData = videos[playerId];
    // add loading class to slide
    videoData.$parentSlide.addClass(classes.loading);

    videoData.status = 'open';

    switch (videoData.type) {
      case 'background-chrome':
        unsetBackgroundVideo(playerId, videoData);
        videoPlayers[playerId].unMute();
        privatePlayVideo(playerId, true);
        break;
      case 'chrome':
        privatePlayVideo(playerId, true);
        break;
    }

    // esc to close video player
    $(document).on('keydown.videoPlayer', function(evt) {
      if (evt.keyCode === 27) {
        closeVideo(playerId);
      }
    });
  }

  function sizeBackgroundVideos() {
    $('.' + classes.videoBackground).each(function(index, el) {
      sizeBackgroundVideo($(el));
    });
  }

  function sizeBackgroundVideo($player) {
    var $slide = $player.closest('.' + classes.slide);
    // Ignore cloned slides
    if ($slide.hasClass(classes.slickClone)) {
      return;
    }
    var slideWidth = $slide.width();
    var playerWidth = $player.width();
    var playerHeight = $player.height();

    // when screen aspect ratio differs from video, video must center and underlay one dimension
    if (slideWidth / videoOptions.ratio < playerHeight) {
      playerWidth = Math.ceil(playerHeight * videoOptions.ratio); // get new player width
      $player.width(playerWidth).height(playerHeight).css({
        left: (slideWidth - playerWidth) / 2,
        top: 0
      }); // player width is greater, offset left; reset top
    } else { // new video width < window width (gap to right)
      playerHeight = Math.ceil(slideWidth / videoOptions.ratio); // get new player height
      $player.width(slideWidth).height(playerHeight).css({
        left: 0,
        top: (playerHeight - playerHeight) / 2
      }); // player height is greater, offset top; reset left
    }

    $player
      .prepareTransition()
      .addClass(classes.loaded);
  }

  function unsetBackgroundVideo(playerId) {
    // Switch the background-chrome to a chrome-only player once played
    $('#' + playerId)
      .removeAttr('style')
      .removeClass(classes.videoBackground)
      .addClass(classes.videoChrome);

    videos[playerId].$parentSlideshowWrapper
      .removeClass(classes.slideBackgroundVideo)
      .addClass(classes.playing);

    videos[playerId].$parentSlide
      .removeClass(classes.slideBackgroundVideo)
      .addClass(classes.playing);

    videos[playerId].status = 'open';
  }

  function setBackgroundVideo(playerId) {
    // Switch back to background-chrome when closed
    var $player = $('#' + playerId)
      .addClass(classes.videoBackground)
      .removeClass(classes.videoChrome);

    videos[playerId].$parentSlide
      .addClass(classes.slideBackgroundVideo);

    videos[playerId].status = 'background';
    sizeBackgroundVideo($player);
  }

  function initEvents() {
    $(document).on('click.videoPlayer', '.' + classes.playVideoBtn, function(evt) {
      var playerId = $(evt.currentTarget).data('controls');
      startVideoOnClick(playerId);
    });

    $(document).on('click.videoPlayer', '.' + classes.closeVideoBtn, function(evt) {
      var playerId = $(evt.currentTarget).data('controls');
      closeVideo(playerId);
    });

    // Listen to resize to keep a background-size:cover-like layout
    $(window).on('resize.videoPlayer', $.debounce(250, function() {
      if (youtubeLoaded) {
        sizeBackgroundVideos();
      }
    }));
  }

  function removeEvents() {
    $(document).off('.videoPlayer');
    $(window).off('.videoPlayer');
  }

  return {
    init: init,
    loadVideos: loadVideos,
    loadVideo: loadVideo,
    playVideo: customPlayVideo,
    pauseVideo: pauseVideo,
    removeEvents: removeEvents
  };
})();

// Utility functions
$(document).ready(function() {
    $(document).on('click', 'a.js-smooth-scroll[href^="#"]', function (event) {
        event.preventDefault();

        $('html, body').animate({
            scrollTop: $($.attr(this, 'href')).offset().top
        }, 500);
    });

    var start = 0;
    $(document).click(function() {
        var main = document.getElementById("main-video");
        if (main && main.paused) {
            main.play();
        }

        var middle = document.getElementById("middle-video");
        if (middle && middle.paused) {
            middle.play();
        }
    });
});




// Photo Maps 
$(".photo-map").on('mousemove', function(e) {
    var mouseSideImg;
    var mouseSideUrl;
    if ((e.pageX - this.offsetLeft) < $(this).width() / 2) {
        mouseSideImg = $(this).attr('data-left-img');
        mouseSideUrl = $(this).attr('data-left-url');        
        $(this).find('img').attr('src', mouseSideImg);
        //$(this).find('a').attr('href', mouseSideUrl);   
        $(this).addClass('left-active');
        $(this).removeClass('right-active');
    } else {
        mouseSideImg = $(this).attr('data-right-img');
        mouseSideUrl = $(this).attr('data-right-url');                
        $(this).find('img').attr('src', mouseSideImg);
        //$(this).find('a').attr('href', mouseSideUrl); 
        $(this).addClass('right-active');
        $(this).removeClass('left-active');      
    }
}).on('mouseout', function(){
		 var mouseSideImg;
     	 mouseSideImg = $(this).attr('data-original-img');
 		 $(this).find('img').attr('src', mouseSideImg);
     
});



function init() {
var vidDefer = document.getElementsByTagName('iframe');
for (var i=0; i<vidDefer.length; i++) {
if(vidDefer[i].getAttribute('data-src')) {
vidDefer[i].setAttribute('src',vidDefer[i].getAttribute('data-src'));
} } }
window.onload = init;





/*= Gift Messages
=============================*/ 

  // Change confirmation for message popup
  function giftThankYouMessage(){
    var giftBagStatus = $('#giftbox_check').is(':checked');
    var giftMessageLength = $('.gift-message__content textarea').val().length;
    var thankyouMessage = 'No gift options have been selected. Please go back if you would like to include a handwritten note or a gift bag. Close if you would not like to include any gift options.';

    if(giftBagStatus && giftMessageLength == 0){
      thankyouMessage = 'Thank you! Your product will be shipped in our custom gift bag made from the softest fibers on Earth. Go back if you would also like to include a handwritten note.';
    }else if(giftBagStatus && giftMessageLength >= 1){
      thankyouMessage = 'Thank you! Your product will be shipped in our custom gift bag made from the softest fibers on Earth and your message will be included as a handwritten note with your gift.';    
    }else if(!giftBagStatus && giftMessageLength >= 1){
	  thankyouMessage = 'Thank you! Your message will be included as a handwritten note with your gift. Please go back if you would also like to include a bag. If you only wish to include a note, please click close.';    
    }

    return thankyouMessage;
  } 

  // Close popup 
  $('.gift-popup__close').on('click', function(){
  	$(this).closest('#gift-popup__container').removeClass('open');
    $('.site-header__cart-toggle').trigger('click');
  });
  
  //Save Gift Message 
  $('#save-gift-message').on('click', function(){
  	var giftMessage = $('#gift-message__message').val();
    Cookies.set('giftMessage', giftMessage, { path: '/' });  
    $('#gift-message__step1').fadeOut(1000, function(){
      	$('#gift-message__step2').fadeIn(1000);    
      	$('#gift-popup__close-arrow').fadeIn(1000);
    });
    
    var thankYouMessage = giftThankYouMessage();
    $('#gift-message_thanks').html(thankYouMessage);
  });

  $('#back-gift-message').on('click', function(){
    $('#gift-message__step2').fadeOut(1000, function(){
      $('#gift-message__step1').fadeIn();
    });
  });
  
  //Open Popup
  $('body').on('click', '#add-gift-message', function(event){
   	event.preventDefault();
    $(this).closest('#CartDrawer').find('.drawer__close').trigger('click');
    $('#gift-message__step2').css('display','none');
    $('#gift-popup__close-arrow').css('display','none');    
  	$('#gift-message__step1').css('display','block');      
  	$('#gift-popup__container').addClass('open');
  });

  // Countdown update 
  function updateCountdown() {
    // 140 is the max message length
    var remaining = 200 - jQuery('#gift-message__message').val().length;
    jQuery('.gift-message__counter span').text(remaining);
  }

  $('#gift-message__message').change(updateCountdown);
  $('#gift-message__message').keyup(updateCountdown);

  // If message already exists, replaces message with old message






  

// Video Mute Functionality
function toggleMute() {
  var video=document.getElementById("main-video");

  if(video.muted){
    video.muted = false;
  } else {
    video.muted = true;
  }

}
  

function toggleMute2() {
  var video=document.getElementById("pagebuilder_main-video");

  if(video.muted){
    video.muted = false;
  } else {
    video.muted = true;
  }


}
  
$('.embed-container').on('click', function(){
    toggleMute();

    $('.unmute').toggleClass('notMuted');
});
  
  
  $('.gba-video').on('click', function(){
    toggleMute2();
    $('.unmute').toggleClass('notMuted');
});


$('.playButton').on('click', function(){
	$('.no-auto').trigger('click');
  	$('.no-auto video').trigger('click');
});

$('.no-auto video').click(function(){this.paused?this.play():this.pause();});


$('.no-auto video').on('click', function(){
	$('.playButton').toggleClass('pause');
});


$('.gba-video-reverse .playButton').on('click', function(){
	  $('.gba-video__popup').fadeIn();
  	$('.gba-video__popup video')[0].play();
});



$('.gba-video__popup').on('click', function(){
  $('.gba-video__popup video')[0].pause();
  $('.gba-video__popup').fadeOut();
});


/*= Only Popup Functionality We Need 
======================================*/ 

function showme(content){
	$('.popup').fadeIn();
  	$('.popup-body').html(content);
}

function closeme(){
	$('.popup').fadeOut();
}





/*= Out of Stock Functionality
================================*/ 


$(document).ready(function(){
  $('.swatch').on('click', '.soldout label', function(){
      var soldoutText = '<h3>Item out of stock</h3>This item is currently out of stock in the color and size you selected. Please email <a href="mailto:customercare@bleusalt.com">customercare@bleusalt.com</a> for information on when this item will be restocked.';
      showme(soldoutText);
  });

  $('.popup-close').on('click', function(){
      closeme();
  });

   $('.swatch1').on('click', function(){
    if (!$("input[name='option-0']:checked").val()) {
      $('.swatch input:first').prop('checked', true);
      //var selectsizeText = '<h3>Please select a size first </h3>Please select a size first to see what color options are available for that size.';
      //showme(selectsizeText);
    }
  });  
  
   $('.swatch2').on('click', function(){
    if (!$("input[name='option-0']:checked").val()) {
      $('.swatch0 input:first').prop('checked', true);
      $('.swatch1 input:first').prop('checked', true);
      //var selectsizeText = '<h3>Please select a size first </h3>Please select a size first to see what color options are available for that size.';
      //showme(selectsizeText);
    }
     
    
  });   
});



/* Boat Coat Customizer 
===============================*/



// Parka Customizer Next Step 

$('.parka-next').on('click', function(){

  var boatCoatTab = $('.swatch-tab-content.active');
 
 // Save Button Check
 if(boatCoatTab.parent().is(':nth-last-child(2)')){
   $('.parka-next').fadeOut(function(){
   	$('.parka-save').fadeIn();
   }); 
 }else if(boatCoatTab.parent().is(':first-child')){
    $('.parka-prev').fadeIn(); 
 }
 
 // Change Tabs
 if(!boatCoatTab.parent().is(':last-child')){  
  boatCoatTab.fadeOut(function(){
    $(this).removeClass('active');
    $(this).parent().next().find('.swatch-tab-content').fadeIn(function(){
      $(this).addClass('active');        
    });    
  });    
 }  
  
 var progressBar =  $('.customizer__progressBar');

  if(progressBar.hasClass('step1')){
 	progressBar.addClass('step2'); 
   	progressBar.removeClass('step1'); 
    $('#step2').addClass('active');
    return;
  }
  if(progressBar.hasClass('step2')){
 	progressBar.addClass('step3'); 
   	progressBar.removeClass('step2'); 
    $('#step3').addClass('active');
    
    return;
    
  }
  if(progressBar.hasClass('step3')){
 	progressBar.addClass('step4'); 
   	progressBar.removeClass('step3'); 
    $('#step4').addClass('active');
    
    return;
  }
  
});


// Parka Customizer Prev Step 
$('.parka-prev').on('click', function(){
  var boatCoatTab = $('.swatch-tab-content.active');
  
 // Remove Prev Button
 if(boatCoatTab.parent().is(':nth-child(2)')){
   $('.parka-prev').fadeOut();
 }else if(boatCoatTab.parent().is(':last-child')){
   $('.parka-save').fadeOut(function(){
   	$('.parka-next').fadeIn();
   });
 }
    
 // Change Tabs
 if(!boatCoatTab.parent().is(':first-child')){  
  boatCoatTab.fadeOut(function(){
    $(this).removeClass('active');
    $(this).parent().prev().find('.swatch-tab-content').fadeIn(function(){
      $(this).addClass('active');        
    });    
  }); 
 }
  
});

// Save Customizer Options 
$('#save-parka-customizer').on('click', function(){
  	customizerValidation();
 
});

// Open Button
$('#customizeParka').on('click', function(){
  $('#parka-customizer .content-wrapper').fadeIn(function(){
  	$('#parka-customizer').fadeIn();

  });  
  	$('body').css('overflow', 'hidden');
});

// Close Button
$('#close-parka-customizer').on('click', function(){
	$('#parka-customizer').fadeOut();
  	$('body').css('overflow', 'visible');  
});


// Close Confirmation
$('.customization-confirmation .closeThis').on('click', function(){
	$('#parka-customizer').fadeOut();
  	$('.customization-confirmation').fadeOut();
});

// Wizard Validation 


function customizerValidation(){
    var colorCheck;
    var textcolorCheck; 
    colorCheck = $('[name="parkaColor"]:checked').length > 0;
    textcolorCheck = $('[name="parkatextColor"]:checked').length > 0;
  
  	console.log(colorCheck);

    if(!colorCheck && textcolorCheck){
        var errorCode = 'Please select a color for your coat.' ;
        throwErrorCode(errorCode);
    }else if(colorCheck && !textcolorCheck){
        var errorCode = 'Please select a color for your text.' ;
        throwErrorCode(errorCode);
    }else if(!colorCheck && !textcolorCheck){
        var errorCode = 'Please select a color for your text and your coat.' ;
        throwErrorCode(errorCode);
    }else{
      	console.log('hahaha');
        saveParkaSettings();
    }
    
}

function throwErrorCode(param){
    $('#errorCodeContainer').html(param);
}



// Save Settings
function saveParkaSettings(){
	var parkaColor = $('input[name="parkaColor"]:checked').val();
  	var parkatextColor = $('input[name="parkatextColor"]:checked').val();
  	var outlineColor = $('input[name="boatCoat_outlineColor"]:checked').val();
  
  	var parkaText = $('#parkaText').val();

  	$('#parka-text').val(parkaText);
  	$('#parka-color').val(parkaColor);
  	$('#text-color').val(parkatextColor);
	$('#outline-color').val(outlineColor);

    $('#parka-customizer .content-wrapper').fadeOut(function(){
      $('.customization-confirmation').fadeIn();
    });
  
  	$('body').css('overflow', 'visible');  
  
  	console.log('itworked');
}


// Change Layer 1
$('input[name="boatCoat_outlineColor"]').on('click', function(){
   var outlineColor =  $(this).attr('data-color');
   $('#stripe-layer text').css('stroke', outlineColor );
   $('#stripe-layer text').css('stroke-width', 10 );
  
});


// Change Layer 2
$('input[name="parkaColor"]').on('click', function(){
    var coatColor =  $(this).attr('data-color');
    $('#sweater-color-main path').css('fill', coatColor);
 });

// Change Layer 2
$('input[name="parkatextColor"]').on('click', function(){
    var stripeColor =  $(this).attr('data-color');
    $('#stripe-layer path').css('fill', stripeColor);
    $('#stripe-layer  text').css('fill', stripeColor);  
 });



// Change Layer 3
$('#parkaText').keyup(function(event) {
    var currentText = $(this).val();
    $('#stripe-layer text').text(currentText);
});






/*= Slide Out Navigation 
========================================*/


// Add tabs func to nav
$('.nav__link-tab-content').on('click', function(){
  var dataLink = $(this).attr('data-link');
  var selector = $('#nav-container__' + dataLink);
	
  $('.nav__link-tab-content.active').removeClass('active');
  $(this).addClass('active');

  $('.nav-tab-content.active').fadeOut(function(){
    $('.nav-tab-content.active').removeClass('active');
    selector.fadeIn(function(){
        selector.addClass('active');
    });
  });
});


// Add Second level nav
$('.openSecondLevel').on('click', function(){
  $('.firstLevel').fadeOut(function(){
  	$('.secondLevel').fadeIn();
  });
});


//Close drawers when clicked on drawer overlay
$('#returnToLevelOne').on('click', function (evt) {
  $('.secondLevel').fadeOut(function(){
  	$('.firstLevel').fadeIn();
  });
}); 




/*============================
CLASS - Screen 
==============================*/ 


function screen(){

  // Returns screen width
  this.width = function(){
    return window.innerWidth;
  }  	
  
  
  // Returns screen height
  this.height = function(){
      return window.innerHeight;
  }
  
  // Returns true if mobile screen
  this.mobile = function(){
    if (window.innerWidth >= 0 &&  window.innerWidth <= 480){
    	return true;
    }else{
    	return false;
    }
  }
  
  // Returns true if tablet screen
  this.tablet = function(){
	if(window.innerWidth >= 481 && window.innerWidth <= 768){
        return true;
    }else{
    	return false;
    }
  }
  
  // Returns true if desktop
  this.desktop = function(){
	if(window.innerWidth >= 769 ){
        return true;
    }else{
    	return false;
    }    
  }
  
  // Returns scroll position 
  
  this.scroll = function(){
  	return $(window).scrollTop();
  }
  
}


/*=======================================
// Sticky Header Fix
=======================================*/ 

function stickHeader(target){
	
  	var selector = $(target);
    var targetOffset = selector.offset().top;
    var headerHeight = selector.outerHeight();
  
    $('#offsetBlock').height(headerHeight);

   
  	var $w = $(window).scroll(function(){
        if ( $w.scrollTop() > targetOffset ){ 
          selector.removeClass('stickIt').removeClass('stuck').addClass('unStuck');
        }else {                                
          selector.addClass('stickIt').addClass('stuck').removeClass('unStuck');
        }
    });
}

$(document).ready(function(){

  var $window = new screen();  
  
  if($window.width() > 1365){
    stickHeader('header');
  }else{
	stickHeader('nav');
  }  
    
  $(window).resize(function(){
    if($window.width() > 1365){
      stickHeader('header');
    }else{
      stickHeader('nav');
    }      
  });

});




/*=============================================
// Featured Collection Page Images
==============================================*/ 

$(window).on('resize load', function(){
  
  $('.featuredProduct_single').each(function(index){
    
    var $screen = new screen();
    
    if($screen.desktop()){
      var desktopCarousel = $(this).find('.desktopImages');
      desktopCarousel.attr('data-slider-id', 'desktop'+  index);
      desktopCarousel.closest('.featuredProduct_single').find('.desktopSwatch').attr('data-slider-id', 'desktop'+ index);

      desktopCarousel.on('initialized.owl.carousel', function(event) {
          $('.coverImage').addClass('cover');
      });

      
    var cats = {};
    var list = $('[data-desktop]',this).filter(function(){
        var category = $(this).data("desktop");

        if(cats[category]){
            return false;   
        } else {
            cats[category] = true;
            return true;
        }
    }).addClass('first');      



      desktopCarousel.owlCarousel({
        items:1,
        mouseDrag: false,
        thumbs: true, 
        animateIn: 'fadeIn',
        animateOut: 'fadeOut',    
      	lazyLoad:true,        
        thumbsPrerendered: true, 
        nav: false,
      onLoadLazy: function(elem){
        	console.log(elem);
          elem.element.addClass("lazy-loaded");
      },         
        thumbContainerClass: 'desktopSwatch',  
      });
      
      

      
    }else{
      
      var mobileCarousel = $(this).find('.mobileImages');
      mobileCarousel.attr('data-slider-id', index);  
	  mobileCarousel.closest('.featuredProduct_single').find('.mobileSwatch').attr('data-slider-id', index);

      mobileCarousel.on('initialized.owl.carousel', function(event) {
          $('.coverImage').addClass('cover');
      });
    var cats = {};
    var list = $('[data-mobile]',this).filter(function(){
        var category = $(this).data("mobile");

        if(cats[category]){
            return false;   
        } else {
            cats[category] = true;
            return true;
        }
    }).addClass('first');    

      mobileCarousel.owlCarousel({
        items:1,
        mouseDrag: false,
      	lazyLoad:true,        
        thumbs: true, 
        animateIn: 'fadeIn',
        animateOut: 'fadeOut',      
        thumbsPrerendered: true, 
        nav: false,
      onLoadLazy: function(elem){
        	console.log(elem);
          elem.element.addClass("lazy-loaded");
      },         
        thumbContainerClass: 'mobileSwatch',  
      }); 
      
      
    }
    
    
  });  
});


// Collection Navigation 
$('.hasChildren').on('click', function(event){
  event.preventDefault();	 
  $('.hasChildren.open').next().removeClass('active');
  
  $('.hasChildren.open').removeClass('open');
  
  $(this).toggleClass('open');
  $(this).next().toggleClass('active');
})



$('.bold_option_checkbox label').on('click', function(){
	$(this).addClass('active');
});	



/*= Gift Message 
=================================*/

    $(document).ready(function(){
    function giftWrapping(){
      console.log('checkbox was checked');
      jQuery.post('/cart/update.js', {
        updates: { 12416029687843: 1}
      });
      Cookies.set('giftbag', 1, { expires: 7, path: '/' });
    }    
      
    function removeGiftWrapping(){
      console.log('checkbox was unchecked');
      jQuery.post('/cart/update.js', {
      	updates: { 12416029687843: 0}
      });
	  Cookies.set('giftbag', 0, { expires: 7, path: '/' }); // fail! 
    }       
      
      
      $('#save-gift-message').on('click', function(){
        if($('#giftbox_check').is(':checked')){
			giftWrapping();
        }else{
        	removeGiftWrapping();
        }
      });
            
      
      if(Cookies.get('giftbag') == 1){
        console.log(Cookies.get('giftbag'));
      	$('#giftbox_check').click();
      }else{
      
      }
      

    
      
      
        // Add custom class for BOLD product options checkbox
      $('.bold_option_checkbox label').click(function(){
        if($('.bold_option_checkbox input[type=checkbox]').is(":checked")){
          $(this).closest('label').addClass('active');
          $('.bold_option_textbox').removeClass('bold_option_hidden');
        }else{
          $(this).closest('label').removeClass('active');      
          $('.bold_option_textbox').addClass('bold_option_hidden');        
        }      
      });   
      
      
    });


    $(document).ready(function(){
  	var giftCookie = Cookies.get('giftMessage');    
    if(giftCookie != ''){
      $('#gift-message__message').val(giftCookie);
	  updateCountdown();      
    }  
  });



// Gift Message component
$('body').on('click', '.OPTIONS_HIDDEN_PRODUCT', function(event){
	event.preventDefault();
});

$('body').on('click', '.OPTIONS_HIDDEN_PRODUCT.ajaxcart__qty-remove', function(){
	$('#giftbox_check').prop('checked', false);
});